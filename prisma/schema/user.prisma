model User {
  id             Int           @id @default(autoincrement())
  email          String        @unique
  name           String?
  created_at     DateTime      @default(now()) @db.Timestamptz(3)
  updated_at     DateTime      @default(now()) @updatedAt @db.Timestamptz(3)
  user_id        String        @unique @default(uuid())
  email_verified Boolean?      @default(false)
  phone_verified Boolean?      @default(false)
  phone          String?
  customer_id    String?       @unique
  profile        Profile?      @relation
  subscription   Subscription? @relation
  securities     Security[]    @relation
  holdings       Holding[]     @relation
  accounts       Account[]     @relation
  items          Item[]        @relation
}

model Item {
  item_id                 String    @unique
  institution_id          String
  institution_name        String?
  webhook                 String?
  auth_method             String?
  request_id              String
  update_type             String
  consent_expiration_time String
  created_at              DateTime  @default(now()) @db.Timestamptz(3)
  available_products      String[]
  billed_products         String[]
  products                String[]
  error                   String?
  consented_products      String[]
  consented_data_scopes   String[]
  consented_use_cases     String[]
  access_token            String
  User                    User      @relation(fields: [user_id], references: [user_id])
  user_id                 String
  account                 Account[]
}

model TransactionStatus {
  id                     Int      @id @default(autoincrement())
  last_successful_update DateTime @db.Timestamptz(3)
  last_failed_update     DateTime @db.Timestamptz(3)
}

model WebhookStatus {
  id        Int      @id @default(autoincrement())
  sent_at   DateTime @db.Timestamptz(3)
  code_sent String
}

model OptionContract {
  id                         Int     @id @default(autoincrement())
  contract_type              String
  expiration_date            String
  strike_price               Decimal
  underlying_security_ticker String
}

model FixedIncome {
  id                    Int      @id @default(autoincrement())
  yield_rate_percentage Decimal?
  yield_rate_type       String?
  maturity_date         String?
  issue_date            String?
  face_value            Decimal?
  security              Security @relation(fields: [securityId], references: [security_id])
  securityId            String   @unique
}
